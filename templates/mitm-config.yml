# Ignore host and forward all traffic without processing it. In
# transparent mode, it is recommended to use an IP address (range), not
# the hostname. In regular mode, only SSL traffic is ignored and the
# hostname should be used. The supplied value is interpreted as a
# regular expression and matched on the ip or the hostname. Type
# sequence of str.
#ignore_hosts:
  #- '^.*$'

# Mode can be "regular", "transparent", "socks5", "reverse:SPEC", or
# "upstream:SPEC". For reverse and upstream proxy modes, SPEC is host
# specification in the form of "http[s]://host[:port]". Type str.
mode: ["transparent"]

# Use the Host header to construct URLs for display. Type bool.
showhost: true

# Stream WebSocket messages between client and server. Messages are
# captured and cannot be modified. Type bool.
stream_websockets: true

# Log verbosity. Valid values are 'error', 'warn', 'info', 'alert',
# 'debug'.
termlog_verbosity: alert

# By default, mitmproxy will read an entire request/response, perform any
# indicated manipulations on it, and then send the message on to the other party.
# This can be problematic when downloading or uploading large files. When
# streaming is enabled, message bodies are not buffered on the proxy but instead
# sent directly to the server/client. HTTP headers are still fully buffered before
# being sent.
#
# Request/response streaming is enabled by specifying a size cutoff in the
# `stream_large_bodies` option.
stream_large_bodies: 100m

# Set a large body size so our audio messages don't get cut off!
body_size_limit: 2g

# Web UI host. Type str.
web_host: 0.0.0.0

# Start a browser. Type bool.
web_open_browser: false

# Web UI port. Type int.
web_port: 8081

# Required fro non-HTTP(S) protocols
#rawtcp: true

# Required for some older TLS clients
#ssl_insecure: true
